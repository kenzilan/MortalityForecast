% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_BackTesting.R
\name{do.BackTesting}
\alias{do.BackTesting}
\title{Perform In-Sample Testing of Mortality Forecasts Over One Time Period}
\usage{
do.BackTesting(data, data.B = NULL, x, y.fit, y.for, data.in = c("qx",
  "mx", "dx", "lx"), models, level = 95, jumpchoice = c("actual",
  "fit"), verbose = FALSE, ...)
}
\arguments{
\item{data}{A data.frame or a matrix containing mortality data 
with ages \code{x} as row and time \code{y} as column. This object should
contain the data to be used in fitting (training) and validation process 
as well.}

\item{data.B}{A data.frame or a matrix containing mortality data for 
the benchmark population. This dataset is needed only in the coherent 
mortality models (e.g. \code{LiLee, OeppenC}). Must be the same format as 
in data;}

\item{x}{Numerical vector indicating the ages in input \code{data}. 
Optional. Default: \code{NULL}.}

\item{y.fit}{Years to be considered in fitting.}

\item{y.for}{Years to be forecast.}

\item{data.in}{Specify the type of input \code{data}. Various life table 
indices are accepted: \code{"qx", "mx", "dx", "lx"}.}

\item{models}{One or several mortality models to be estimated. 
The following options are available: \itemize{
  \item{\code{"MRW"}} -- The Multivariate Random-Walk (w/o Drift);
  \item{\code{"MRWD"}} -- The Multivariate Random-Walk with Drift;
  \item{\code{"LeeCarter"}} -- The Lee-Carter Mortality Model;
  \item{\code{"LiLee"}} -- The Li-Lee Mortality Model;
  \item{\code{"HyndmanUllah"}} -- The Hyndman-Ullah Mortality Model;
  \item{\code{"Oeppen"}} -- The Oeppen Mortality Model;
  \item{\code{"OeppenC"}} -- The Coherent Oeppen Mortality Model;
  \item{\code{"MEM2"}} -- The Maximum Entropy Mortality Model of order 2;
  \item{\code{"MEM3"}} -- The Maximum Entropy Mortality Model of order 3;
  \item{\code{"MEM4"}} -- The Maximum Entropy Mortality Model of order 4;
  \item{\code{"MEM5"}} -- The Maximum Entropy Mortality Model of order 5;
  \item{\code{"MEM6"}} -- The Maximum Entropy Mortality Model of order 6;
  \item{\code{"MEM7"}} -- The Maximum Entropy Mortality Model of order 7;
}}

\item{level}{Significance level of the confidence interval.}

\item{jumpchoice}{Method used for computation of jumpchoice. 
Possibilities: \code{"actual"} (use actual rates from final year) 
and \code{"fit"} (use fitted rates).}

\item{verbose}{A logical value. Set \code{verbose = FALSE} to silent 
the process that take place inside the function and avoid progress messages.}

\item{...}{Arguments to be passed to or from other methods.}
}
\description{
Perform In-Sample Testing of Mortality Forecasts Over One Time Period
}
\examples{
library(MortalityForecast)
library(magrittr)

x  <- 0:100            # Ages
y1 <- 1980:2000        # Training period
y2 <- 2001:2016        # Validation period
y  <- c(y1, y2)        # entire period
K <- "GBRTENW"         # Country to be analysed

# Mortality data for country: K
mx.country <- HMD_male$mx[[K]][paste(x), paste(y)] \%>\% replace.zeros

# Create a mortality data for a benchmark population
# to be used in "LiLee" and "OeppenC" models
average_mx <- function(w) prod(w, na.rm = TRUE)^(1/(length(w)))

Mx <- HMD_male$mx \%>\% 
  lapply(as.matrix) \%>\% 
  lapply(replace.zeros) \%>\% 
  simplify2array() \%>\% 
  apply(., 1:2, FUN = average_mx) \%>\% 
  as.data.frame()

mx.benchmark <- Mx[paste(x), paste(y)]

# Select various mortality models
MM <- c("MRWD", "LeeCarter", "LiLee", "HyndmanUllah", 
        "Oeppen", "OeppenC", "MEM5", "MEM6")
# Fit & Forecast the models 
B <- do.BackTesting(data = mx.country,
                    data.B = mx.benchmark,
                    x = x,
                    y.fit = y1, 
                    y.for = y2,
                    data.in = "mx",
                    models = MM)

# Compute accuracy measures for resulted life exectancies
A <- evalAccuracy(B, data.out = "ex")
A
# Rank the model's performance.
R <- do.Ranking(A)
R
R[, c(1:3, 20)]

# Visualize the results
plot(B, data.out = "ex", facet = "x", 
     which = c(0, 20, 40, 60, 75, 90))
plot(B, data.out = "mx", facet = "y", which = 2016) 
}
\seealso{
\code{\link{do.BBackTesting}}
\code{\link{evalAccuracy.BackTesting}}
}
