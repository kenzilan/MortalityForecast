% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CODA_Plots.R
\name{plot.coda}
\alias{plot.coda}
\title{Plot fitted parameters and fitted values of a CoDa mortality model}
\usage{
\method{plot}{coda}(x, plotType = c("coef", "data"), type = "l",
  ylim = NULL, ylab = "", ...)
}
\arguments{
\item{x}{An object of class \code{"coda"} with the fitted 
parameters of the mortality model.}

\item{plotType}{The type of the plot. The alternatives are 
\code{"coef"}(default) and \code{"data"}.}

\item{type}{1-character string giving the type of plot desired.  The
    following values are possible, for details, see \code{\link{plot}}:
    \code{"p"} for points, \code{"l"} for lines,
    \code{"b"} for both points and lines,
    \code{"c"} for empty points joined by lines,
    \code{"o"} for overplotted points and lines,
    \code{"s"} and \code{"S"} for stair steps and
    \code{"h"} for histogram-like vertical lines.  Finally,
    \code{"n"} does not produce any points or lines.}

\item{ylim}{the y limits of the plot.}

\item{ylab}{a label for the y axis, defaults to a description of \code{y}.}

\item{...}{other \link{graphical parameters} (see \code{\link{par}} and
    section \sQuote{Details} below).}
}
\description{
Plot fitted parameters and fitted values of a CoDa mortality model. 
Two types of plots are available: \code{"coef"} to obtain representations of the 
three estimated series of parameters and \code{"data"} for visualising the input 
and fitted values.
}
\details{
When \code{"plotType = coef"} the figure is produced using the basic 
plot R function \code{\link[graphics]{plot}}.

When \code{"plotType = data"} the figure is produced using function 
\code{\link[graphics]{matplot}}.

This is important to know in order to use the \code{"..."} argument adequately.
}
\examples{
# Fit model
D <- MortalityForecast.data$dx
M <- coda(D, x = 0:110, y = 1960:2016)

# Plot fitted parameters
plot(M, plotType = "coef")
plot(M, plotType = "coef", type = "p", pch = 19)

# Plot input data and fitted values
plot(M, plotType = "data")
}
